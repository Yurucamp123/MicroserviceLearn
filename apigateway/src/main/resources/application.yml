server:
  port: 8081

spring:
  kafka:
    #địa chỉ kafka broker
    bootstrap-servers: ${KAFKA_BOOSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${KAFKA_GROUP_ID:default-group}
  mail:
    host: smtp.gmail.com
    port: 587
    username: binhltse173315@fpt.edu.vn
    password: bdbv kkrx zead dwxj
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
        transport:
          protocol: smtp
  application:
    name: gatewayservice
  redis:
    port: 6379
    host: localhost
  cloud:
    gateway:
      discover:
        locator:
          enabled: true
      routes:
        - id: employeeservice
          uri: lb://employeeservice
          predicates:
            - Path=/api/v1/employees/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
            - KeyAuthFilter
            - AuthFilter
        - id: bookservice
          uri: lb://bookservice
          predicates:
            - Path=/api/v1/books/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
            - AuthFilter
        - id: borrowingservice
          uri: lb://borrowingservice
          predicates:
            - Path=/api/v1/borrowing/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
            - AuthFilter
        - id: userservice
          uri: lb://userservice
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true

